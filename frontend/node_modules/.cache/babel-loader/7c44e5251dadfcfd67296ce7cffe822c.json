{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\chat\\\\chat-send.jsx\";\nimport React, { useState } from \"react\";\nimport { Share, Emojy } from \"../../assets/icons/icons\";\nimport { useFetch } from \"../../shared/hooks/useFetch\";\nimport socket from \"../socket\";\nimport EmojyPicker from \"../posts/post-form/emojy-picker\";\nconst ChatSend = React.memo(({\n  userId,\n  roomId,\n  serverSendMessage,\n  token\n}) => {\n  const [text, setText] = useState(\"\");\n  const {\n    request,\n    loading,\n    error\n  } = useFetch();\n\n  const sendMessage = async e => {\n    e.preventDefault();\n\n    if (text.trim()) {\n      setText(\"\");\n\n      try {\n        const response = await request(process.env.REACT_APP_BACKEND_URL + \"/messages/send\", \"post\", {\n          userId,\n          text,\n          roomId\n        }, {\n          Authorization: \"Bearer \" + token\n        });\n        serverSendMessage(response.data.message);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const addEmojy = e => {\n    setText(el => el + e);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"chat__send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    className: \"form__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(EmojyPicker, {\n    handleChange: addEmojy,\n    style: {\n      bottom: \" 100%\",\n      left: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"chat__send--form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    maxLength: \"155\",\n    onChange: e => setText(e.target.value),\n    className: \"chat__input p\",\n    placeholder: \"Type a message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"icon\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Share, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n});\nexport default ChatSend;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/chat/chat-send.jsx"],"names":["React","useState","Share","Emojy","useFetch","socket","EmojyPicker","ChatSend","memo","userId","roomId","serverSendMessage","token","text","setText","request","loading","error","sendMessage","e","preventDefault","trim","response","process","env","REACT_APP_BACKEND_URL","Authorization","data","message","err","console","log","addEmojy","el","bottom","left","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,IAAN,CAAW,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAAkD;AAC5E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8Bb,QAAQ,EAA5C;;AAEA,QAAMc,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIP,IAAI,CAACQ,IAAL,EAAJ,EAAiB;AACfP,MAAAA,OAAO,CAAC,EAAD,CAAP;;AACA,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMP,OAAO,CAC5BQ,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,gBADR,EAE5B,MAF4B,EAG5B;AACEhB,UAAAA,MADF;AAEEI,UAAAA,IAFF;AAGEH,UAAAA;AAHF,SAH4B,EAQ5B;AACEgB,UAAAA,aAAa,EAAE,YAAYd;AAD7B,SAR4B,CAA9B;AAYAD,QAAAA,iBAAiB,CAACW,QAAQ,CAACK,IAAT,CAAcC,OAAf,CAAjB;AACD,OAdD,CAcE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AACF,GAtBD;;AAuBA,QAAMG,QAAQ,GAAIb,CAAD,IAAO;AACtBL,IAAAA,OAAO,CAAEmB,EAAD,IAAQA,EAAE,GAAGd,CAAd,CAAP;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAM,IAAA,QAAQ,EAAED,WAAhB;AAA6B,IAAA,SAAS,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,YAAY,EAAEc,QADhB;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEtB,IAFT;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACiB,MAAF,CAASC,KAAV,CAJ1B;AAKE,IAAA,SAAS,EAAC,eALZ;AAME,IAAA,WAAW,EAAC,gBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAmBE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEnB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CAFF,CADF;AA4BD,CA1DgB,CAAjB;AA2DA,eAAeX,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Share, Emojy } from \"../../assets/icons/icons\";\r\nimport { useFetch } from \"../../shared/hooks/useFetch\";\r\nimport socket from \"../socket\";\r\nimport EmojyPicker from \"../posts/post-form/emojy-picker\";\r\n\r\nconst ChatSend = React.memo(({ userId, roomId, serverSendMessage, token }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const { request, loading, error } = useFetch();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (text.trim()) {\r\n      setText(\"\");\r\n      try {\r\n        const response = await request(\r\n          process.env.REACT_APP_BACKEND_URL + \"/messages/send\",\r\n          \"post\",\r\n          {\r\n            userId,\r\n            text,\r\n            roomId,\r\n          },\r\n          {\r\n            Authorization: \"Bearer \" + token,\r\n          }\r\n        );\r\n        serverSendMessage(response.data.message);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  const addEmojy = (e) => {\r\n    setText((el) => el + e);\r\n  };\r\n  return (\r\n    <div className=\"chat__send\">\r\n      {\" \"}\r\n      <form onSubmit={sendMessage} className=\"form__row\">\r\n        <EmojyPicker\r\n          handleChange={addEmojy}\r\n          style={{\r\n            bottom: \" 100%\",\r\n            left: 0,\r\n          }}\r\n        />\r\n\r\n        <div className=\"chat__send--form\">\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            maxLength=\"155\"\r\n            onChange={(e) => setText(e.target.value)}\r\n            className=\"chat__input p\"\r\n            placeholder=\"Type a message\"\r\n          />\r\n        </div>\r\n        <span className=\"icon\" onClick={sendMessage}>\r\n          <Share />\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\nexport default ChatSend;\r\n"]},"metadata":{},"sourceType":"module"}