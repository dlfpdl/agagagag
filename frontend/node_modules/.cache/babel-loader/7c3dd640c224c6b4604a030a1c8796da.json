{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\users\\\\settings\\\\password-settings.jsx\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\nimport { useSelector } from \"react-redux\";\n\nconst PasswordSettings = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useFetch();\n  const [success, setSuccess] = useState(null);\n  const [password, setPasswod] = useState(null);\n  const user = useSelector(state => state.currentUser);\n\n  const handleChange = e => {\n    setPasswod(e.target.value);\n  };\n\n  const onSubmit = async data => {\n    try {\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/users/change-password/${user._id}`, \"patch\", data, {\n        Authorization: \"Bearer \" + user.token\n      });\n      setSuccess(true);\n      clearError();\n      reset({\n        oldPassword: null,\n        newPassword: null,\n        confirmPassword: null\n      });\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"settings__block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error ? error || \"something went wrong\" : \"\")), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \" \",\n    type: \"password\",\n    name: \"oldPassword\",\n    className: \"form__input\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 32\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Old Password\")), errors.oldPassword && React.createElement(\"div\", {\n    className: \"form__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password must be more then 5 characters and less than 33\")), React.createElement(\"div\", {\n    className: \"form__control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \" \",\n    onChange: handleChange,\n    type: \"password\",\n    name: \"newPassword\",\n    className: \"form__input\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 32\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"New Password\")), errors.newPassword && React.createElement(\"div\", {\n    className: \"form__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Password must be more then 5 characters and less than 33\")), React.createElement(\"div\", {\n    className: \"form__control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \" \",\n    type: \"password\",\n    name: \"confirmPassword\",\n    className: \"form__input\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      validate: e => {\n        return e === password;\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Confirm Password\")), errors.confirmPassword && React.createElement(\"div\", {\n    className: \"form__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"the confirmd password is diffrent from the new password\")), React.createElement(\"button\", {\n    className: \"btn btn--contained1-primary mg-none block\",\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, loading ? \"updating password...\" : \"save changes\")), success && React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Your password was updated successfully \"));\n};\n\nexport default PasswordSettings;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/users/settings/password-settings.jsx"],"names":["React","useState","useForm","useFetch","useSelector","PasswordSettings","register","handleSubmit","errors","reset","loading","error","request","clearError","success","setSuccess","password","setPasswod","user","state","currentUser","handleChange","e","target","value","onSubmit","data","response","process","env","REACT_APP_BACKEND_URL","_id","Authorization","token","oldPassword","newPassword","confirmPassword","err","console","log","required","minLength","maxLength","validate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PasswordSettings = () => {\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const { loading, error, request, clearError } = useFetch();\r\n  const [success, setSuccess] = useState(null);\r\n  const [password, setPasswod] = useState(null);\r\n  const user = useSelector((state) => state.currentUser);\r\n\r\n  const handleChange = (e) => {\r\n    setPasswod(e.target.value);\r\n  };\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/users/change-password/${user._id}`,\r\n        \"patch\",\r\n        data,\r\n        {\r\n          Authorization: \"Bearer \" + user.token,\r\n        }\r\n      );\r\n      setSuccess(true);\r\n      clearError();\r\n      reset({\r\n        oldPassword: null,\r\n        newPassword: null,\r\n        confirmPassword: null,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"settings__block\">\r\n      <div className=\"error-message\">\r\n        <div className=\"message\">\r\n          {error ? error || \"something went wrong\" : \"\"}\r\n        </div>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              type=\"password\"\r\n              name=\"oldPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 32,\r\n              })}\r\n            />\r\n            <label className=\"form__label\">Old Password</label>\r\n          </div>\r\n          {errors.oldPassword && (\r\n            <div className=\"form__error\">\r\n              Password must be more then 5 characters and less than 33\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 32,\r\n              })}\r\n            />\r\n            <label className=\"form__label\">New Password</label>\r\n          </div>\r\n          {errors.newPassword && (\r\n            <div className=\"form__error\">\r\n              Password must be more then 5 characters and less than 33\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                validate: (e) => {\r\n                  return e === password;\r\n                },\r\n              })}\r\n            />\r\n            <label className=\"form__label\">Confirm Password</label>\r\n          </div>\r\n          {errors.confirmPassword && (\r\n            <div className=\"form__error\">\r\n              the confirmd password is diffrent from the new password\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"btn btn--contained1-primary mg-none block\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"updating password...\" : \"save changes\"}\r\n        </button>\r\n      </form>\r\n      {success && <h6>Your password was updated successfully </h6>}\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordSettings;\r\n"]},"metadata":{},"sourceType":"module"}