{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\auth\\\\login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport EmailText from \"../../shared/inputs/email\";\nimport PasswordText from \"../../shared/inputs/password\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useAuth } from \"./useAuth\";\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttpClient();\n  const {\n    handleGetin\n  } = useAuth();\n\n  const handleLogin = async data => {\n    try {\n      const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/users/login\", \"POST\", JSON.stringify({ ...data\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      handleGetin(responseData);\n    } catch (err) {\n      console.log(err, error);\n    }\n  };\n\n  const onSubmit = data => {\n    handleLogin(data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form__container screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Login with Spher\")), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form__body port\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, error ? error || \"something went wrong\" : \"\")), React.createElement(EmailText, {\n    register: register,\n    errors: errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(PasswordText, {\n    register: register,\n    errors: errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: isLoading,\n    className: \"btn btn--contained2-primary mg-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isLoading ? \"Loading....\" : \"Login\"), React.createElement(\"div\", {\n    className: \"form__else\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"don't have an account ? \", React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Signup\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/auth/login.js"],"names":["React","Link","useForm","EmailText","PasswordText","useHttpClient","useAuth","Login","register","handleSubmit","errors","isLoading","error","sendRequest","handleGetin","handleLogin","data","responseData","process","env","REACT_APP_BACKEND_URL","JSON","stringify","err","console","log","onSubmit","email","password"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCR,OAAO,EAAlD;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAoCR,aAAa,EAAvD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBR,OAAO,EAA/B;;AACA,QAAMS,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMJ,WAAW,CACpCK,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,cADA,EAEpC,MAFoC,EAGpCC,IAAI,CAACC,SAAL,CAAe,EACb,GAAGN;AADU,OAAf,CAHoC,EAMpC;AACE,wBAAgB;AADlB,OANoC,CAAtC;AAUAF,MAAAA,WAAW,CAACG,YAAD,CAAX;AACD,KAZD,CAYE,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBX,KAAjB;AACD;AACF,GAhBD;;AAiBA,QAAMc,QAAQ,GAAIV,IAAD,IAAU;AACzBD,IAAAA,WAAW,CAACC,IAAD,CAAX;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,QAAQ,EAAEP,YAAY,CAACiB,QAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,GAAGA,KAAK,IAAI,sBAAZ,GAAqC,EAD7C,CADF,CADF,EAME,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEJ,QAArB;AAA+B,IAAA,MAAM,EAAEE,MAAM,CAACiB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEnB,QAAxB;AAAkC,IAAA,MAAM,EAAEE,MAAM,CAACkB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AACE,IAAA,QAAQ,EAAEjB,SADZ;AAEE,IAAA,SAAS,EAAC,qCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,SAAS,GAAG,aAAH,GAAmB,OAJ/B,CARF,EAcE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC0B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD1B,CADF,CAdF,CADF,CAJF,CADF;AA6BD,CAtDD;;AAuDA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport EmailText from \"../../shared/inputs/email\";\r\nimport PasswordText from \"../../shared/inputs/password\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { isLoading, error, sendRequest } = useHttpClient();\r\n  const { handleGetin } = useAuth();\r\n  const handleLogin = async (data) => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          ...data,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      handleGetin(responseData);\r\n    } catch (err) {\r\n      console.log(err, error);\r\n    }\r\n  };\r\n  const onSubmit = (data) => {\r\n    handleLogin(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form__container screen\">\r\n      <div className=\"form__heading\">\r\n        <h3>Login with Spher</h3>\r\n      </div>\r\n      <div className=\"form\">\r\n        <form className=\"form__body port\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"error-message\">\r\n            <div className=\"message\">\r\n              {error ? error || \"something went wrong\" : \"\"}\r\n            </div>\r\n          </div>\r\n          <EmailText register={register} errors={errors.email} />\r\n          <PasswordText register={register} errors={errors.password} />\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn--contained2-primary mg-none\"\r\n          >\r\n            {isLoading ? \"Loading....\" : \"Login\"}\r\n          </button>\r\n          <div className=\"form__else\">\r\n            <p>\r\n              don't have an account ? <Link to=\"/signup\">Signup</Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}