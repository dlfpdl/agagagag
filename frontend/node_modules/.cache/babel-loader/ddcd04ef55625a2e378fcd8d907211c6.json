{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nexport const useAuth = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const handleGetin = info => {\n    const ExpirationDate = new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 30);\n    dispatch({\n      type: \"SIGN_IN\",\n      payload: info.token\n    });\n    dispatch({\n      type: \"USER_DATA_IN\",\n      payload: { ...info,\n        expiration: ExpirationDate.toISOString()\n      }\n    });\n    localStorage.setItem(\"userData2\", JSON.stringify({ ...info,\n      expiration: ExpirationDate.toISOString()\n    }));\n  };\n\n  const handleGetout = () => {\n    dispatch({\n      type: \"SIGN_OUT\"\n    });\n    dispatch({\n      type: \"USER_DATA_OUT\"\n    });\n    localStorage.removeItem(\"userData2\");\n  };\n\n  const handleRefresh = () => {\n    const data = JSON.parse(localStorage.getItem(\"userData2\"));\n\n    if (data && data.token) {\n      if (new Date(data.expiration) > new Date()) {\n        dispatch({\n          type: \"SIGN_IN\",\n          payload: data.token\n        });\n        dispatch({\n          type: \"USER_DATA_IN\",\n          payload: { ...data\n          }\n        });\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return {\n    handleGetin,\n    handleRefresh,\n    handleGetout,\n    loading\n  };\n};","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/auth/useAuth.js"],"names":["React","useState","useEffect","useDispatch","useAuth","dispatch","loading","setLoading","handleGetin","info","ExpirationDate","Date","getTime","type","payload","token","expiration","toISOString","localStorage","setItem","JSON","stringify","handleGetout","removeItem","handleRefresh","data","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMO,WAAW,GAAIC,IAAD,IAAU;AAC5B,UAAMC,cAAc,GAAG,IAAIC,IAAJ,CACrB,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EADxB,CAAvB;AAGAP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAACL,IAAI,CAACM;AAAhC,KAAD,CAAR;AACAV,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAE,EACP,GAAGL,IADI;AAEPO,QAAAA,UAAU,EAAEN,cAAc,CAACO,WAAf;AAFL;AAFF,KAAD,CAAR;AAOAC,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAe,EACb,GAAGZ,IADU;AAEbO,MAAAA,UAAU,EAAEN,cAAc,CAACO,WAAf;AAFC,KAAf,CAFF;AAOD,GAnBD;;AAoBA,QAAMK,YAAY,GAAG,MAAM;AACzBjB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAK,IAAAA,YAAY,CAACK,UAAb,CAAwB,WAAxB;AACD,GAJD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAX,CAAb;;AACA,QAAIF,IAAI,IAAIA,IAAI,CAACV,KAAjB,EAAwB;AACtB,UAAI,IAAIJ,IAAJ,CAASc,IAAI,CAACT,UAAd,IAA4B,IAAIL,IAAJ,EAAhC,EAA4C;AAC3CN,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,OAAO,EAACW,IAAI,CAACV;AAAhC,SAAD,CAAR;AACCV,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAE,cADC;AAEPC,UAAAA,OAAO,EAAE,EACP,GAAGW;AADI;AAFF,SAAD,CAAR;AAMD;AACF;;AACDlB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAdD;;AAgBA,SAAO;AAAEC,IAAAA,WAAF;AAAegB,IAAAA,aAAf;AAA8BF,IAAAA,YAA9B;AAA4ChB,IAAAA;AAA5C,GAAP;AACD,CA9CM","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nexport const useAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const handleGetin = (info) => {\r\n    const ExpirationDate = new Date(\r\n      new Date().getTime() + 1000 * 60 * 60 * 24 * 30\r\n    );\r\n    dispatch({ type: \"SIGN_IN\" ,payload:info.token });\r\n    dispatch({\r\n      type: \"USER_DATA_IN\",\r\n      payload: {\r\n        ...info,\r\n        expiration: ExpirationDate.toISOString(),\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      \"userData2\",\r\n      JSON.stringify({\r\n        ...info,\r\n        expiration: ExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  };\r\n  const handleGetout = () => {\r\n    dispatch({ type: \"SIGN_OUT\" });\r\n    dispatch({ type: \"USER_DATA_OUT\" });\r\n    localStorage.removeItem(\"userData2\");\r\n  };\r\n  const handleRefresh = () => {\r\n    const data = JSON.parse(localStorage.getItem(\"userData2\"));\r\n    if (data && data.token) {\r\n      if (new Date(data.expiration) > new Date()) {\r\n      \tdispatch({ type: \"SIGN_IN\" ,payload:data.token });\r\n        dispatch({\r\n          type: \"USER_DATA_IN\",\r\n          payload: {\r\n            ...data\r\n          },\r\n        });\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return { handleGetin, handleRefresh, handleGetout, loading };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}