{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\chat\\\\chat-form.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport { useFetch } from \"../../shared/hooks/useFetch\";\nimport { useSelector } from \"react-redux\";\nimport socket from \"../socket\";\nimport { CSSTransition } from 'react-transition-group';\nconst primary = \"#1d8cf8\",\n      second = \"#949495\";\nconst colourStyles = {\n  control: styles => ({ ...styles,\n    color: \"#fff\",\n    backgroundColor: \"#333\",\n    fontSize: \"1.6rem\",\n    minHeight: \"5rem\"\n  }),\n  option: (styles, {\n    data,\n    isDisabled,\n    isFocused,\n    isSelected\n  }) => {\n    return { ...styles,\n      backgroundColor: isSelected ? primary : \"#fff\",\n      color: isSelected ? \"#fff\" : second,\n      fontSize: \"1.5rem\",\n      \":active\": { ...styles[\":active\"],\n        backgroundColor: isSelected ? primary : \"#fff\"\n      },\n      \":hover\": { ...styles[\":hover\"],\n        backgroundColor: primary,\n        color: \"#fff\"\n      }\n    };\n  },\n  multiValue: (styles, {\n    data\n  }) => {\n    return { ...styles,\n      backgroundColor: second\n    };\n  },\n  multiValueLabel: (styles, {\n    data\n  }) => ({ ...styles,\n    color: \"#fff\"\n  }),\n  input: styles => ({ ...styles,\n    color: \"#fff\"\n  }),\n  multiValueRemove: (styles, {\n    data\n  }) => ({ ...styles,\n    backgroundColor: \"#ff3860\",\n    color: \"white\"\n  })\n};\nlet timer;\n\nconst ChatForm = ({\n  dispatchRoom,\n  children\n}) => {\n  const user = useSelector(state => state.currentUser);\n  const [isLoading, setIsLoading] = useState();\n  const [members, setMembers] = useState();\n  const [chatName, setChatName] = useState();\n  const [membersError, setMembersError] = useState();\n  const [chatNameError, setChatNameError] = useState();\n  const [success, setSuccess] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const closeModal = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      document.body.style.overflowY = 'auto';\n    }\n  };\n\n  const openModal = () => {\n    if (!isOpen) {\n      setIsOpen(true);\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const {\n    request,\n    error\n  } = useFetch();\n\n  const FetchUser = async input => {\n    try {\n      const responsedData = await request(process.env.REACT_APP_BACKEND_URL + `/users?q=${input}&limit=7&id=${user._id}`);\n      return responsedData.data.users;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addChatRoom = async () => {\n    const chatRoom = {\n      name: chatName,\n      members: [...members, {\n        value: user._id,\n        label: \"hey\"\n      }]\n    };\n\n    try {\n      setIsLoading(true);\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/chat/create`, \"post\", chatRoom, {\n        Authorization: \"Bearer \" + user.token\n      });\n      socket.emit(\"action\", {\n        members: [...members, {\n          value: user._id,\n          label: \"hey\"\n        }],\n        data: response.data.chatRoom,\n        type: \"CREATE_CAHT_ROOM\"\n      });\n      dispatchRoom({\n        type: \"ADD_ROOM\",\n        payload: response.data.chatRoom\n      });\n      setSuccess(true);\n      closeModal();\n    } catch (err) {\n      console.log(err.response);\n    }\n\n    setIsLoading(false);\n  };\n\n  const promiseOptions = inputValue => new Promise(resolve => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      resolve(FetchUser(inputValue));\n    }, 1000);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!members || !members.length) {\n      setMembersError(true);\n      return;\n    }\n\n    if (!chatName || !chatName.trim().length) {\n      setChatNameError(true);\n      return;\n    } else {\n      addChatRoom();\n      setMembersError(false);\n      setChatNameError(false);\n    }\n  };\n\n  const onChange = selectedOptions => setMembers(selectedOptions);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    onClick: openModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, children), React.createElement(CSSTransition, {\n    in: isOpen,\n    timeout: 300,\n    classNames: \"modal\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__container\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__form\",\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__form__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, error ? error || \"something went wrong\" : \"\")), React.createElement(\"div\", {\n    className: \"form__control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(AsyncSelect, {\n    cacheOptions: true,\n    loadOptions: promiseOptions,\n    defaultOptions: true,\n    name: \"members\",\n    isMulti: true,\n    onChange: onChange,\n    styles: colourStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, membersError && \"yout must add at least one person\"))), React.createElement(\"div\", {\n    className: \"form__control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \" \",\n    type: \"text\",\n    value: chatName,\n    className: \"form__input\",\n    onChange: e => setChatName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Chat Room Name\")), React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, chatNameError && \"yout must name the chat\"))), React.createElement(\"div\", {\n    className: \"chat__form--tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: isLoading || !members || !members.length || !chatName || !chatName.trim(),\n    className: \"btn btn--contained1-default mg-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, isLoading ? \"Loading...\" : \"Create\"))), success && React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Your new room was created succfully\")))))));\n};\n\nexport default ChatForm;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/chat/chat-form.jsx"],"names":["React","useState","useEffect","AsyncSelect","useFetch","useSelector","socket","CSSTransition","primary","second","colourStyles","control","styles","color","backgroundColor","fontSize","minHeight","option","data","isDisabled","isFocused","isSelected","multiValue","multiValueLabel","input","multiValueRemove","timer","ChatForm","dispatchRoom","children","user","state","currentUser","isLoading","setIsLoading","members","setMembers","chatName","setChatName","membersError","setMembersError","chatNameError","setChatNameError","success","setSuccess","isOpen","setIsOpen","closeModal","document","body","style","overflowY","openModal","request","error","FetchUser","responsedData","process","env","REACT_APP_BACKEND_URL","_id","users","err","console","log","addChatRoom","chatRoom","name","value","label","response","Authorization","token","emit","type","payload","promiseOptions","inputValue","Promise","resolve","clearTimeout","setTimeout","handleSubmit","e","preventDefault","length","trim","onChange","selectedOptions","display","stopPropagation","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { useFetch } from \"../../shared/hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socket from \"../socket\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst primary = \"#1d8cf8\",\r\n  second = \"#949495\";\r\nconst colourStyles = {\r\n  control: (styles) => ({\r\n    ...styles,\r\n    color: \"#fff\",\r\n    backgroundColor: \"#333\",\r\n    fontSize: \"1.6rem\",\r\n    minHeight: \"5rem\",\r\n  }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n\r\n      backgroundColor: isSelected ? primary : \"#fff\",\r\n      color: isSelected ? \"#fff\" : second,\r\n      fontSize: \"1.5rem\",\r\n      \":active\": {\r\n        ...styles[\":active\"],\r\n        backgroundColor: isSelected ? primary : \"#fff\",\r\n      },\r\n      \":hover\": {\r\n        ...styles[\":hover\"],\r\n        backgroundColor: primary,\r\n        color: \"#fff\",\r\n      },\r\n    };\r\n  },\r\n  multiValue: (styles, { data }) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: second,\r\n    };\r\n  },\r\n  multiValueLabel: (styles, { data }) => ({\r\n    ...styles,\r\n    color: \"#fff\",\r\n  }),\r\n  input: (styles) => ({ ...styles, color: \"#fff\" }),\r\n  multiValueRemove: (styles, { data }) => ({\r\n    ...styles,\r\n    backgroundColor: \"#ff3860\",\r\n    color: \"white\",\r\n  }),\r\n};\r\n\r\nlet timer;\r\nconst ChatForm = ({ dispatchRoom ,children}) => {\r\n  const user = useSelector((state) => state.currentUser);\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [members, setMembers] = useState();\r\n  const [chatName, setChatName] = useState();\r\n  const [membersError, setMembersError] = useState();\r\n  const [chatNameError, setChatNameError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const [isOpen,setIsOpen]=useState(false);\r\n \r\n  const closeModal = ()=>{\r\n    if(isOpen){\r\n      setIsOpen(false);\r\n       document.body.style.overflowY='auto';\r\n    }\r\n  }\r\n  const openModal=()=>{\r\n    if(!isOpen){\r\n      setIsOpen(true);\r\n      document.body.style.overflowY='hidden';\r\n    }\r\n  }\r\n\r\n  const { request, error } = useFetch();\r\n  const FetchUser = async (input) => {\r\n    try {\r\n      const responsedData = await request(\r\n        process.env.REACT_APP_BACKEND_URL + `/users?q=${input}&limit=7&id=${user._id}`\r\n      );\r\n      return responsedData.data.users;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addChatRoom = async () => {\r\n    const chatRoom = {\r\n      name: chatName,\r\n      members: [...members, { value: user._id, label: \"hey\" }],\r\n    };\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL + `/chat/create`,\r\n        \"post\",\r\n        chatRoom,\r\n        {\r\n          Authorization: \"Bearer \" + user.token,\r\n        }\r\n      );\r\n      socket.emit(\"action\", {\r\n        members: [...members, { value: user._id, label: \"hey\" }],\r\n        data: response.data.chatRoom,\r\n        type: \"CREATE_CAHT_ROOM\",\r\n      });\r\n      dispatchRoom({ type: \"ADD_ROOM\", payload: response.data.chatRoom });\r\n      setSuccess(true);\r\n      closeModal();\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const promiseOptions = (inputValue) =>\r\n    new Promise((resolve) => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        resolve(FetchUser(inputValue));\r\n      }, 1000);\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!members || !members.length) {\r\n      setMembersError(true);\r\n      return;\r\n    }\r\n    if (!chatName || !chatName.trim().length) {\r\n      setChatNameError(true);\r\n      return;\r\n    } else {\r\n      addChatRoom();\r\n      setMembersError(false);\r\n      setChatNameError(false);\r\n    }\r\n  };\r\n  const onChange = (selectedOptions) => setMembers(selectedOptions);\r\n\r\n  return (\r\n    <>\r\n    <div style={{display:'inline-block'}} onClick={openModal}>{children}</div>\r\n      <CSSTransition\r\n        in={isOpen}\r\n        timeout={300}\r\n        classNames=\"modal\"\r\n        unmountOnExit\r\n      >\r\n    <div className=\"modal__container\" onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <div className=\"chat__form\" onClick={(e) => e.stopPropagation()}>\r\n          <div className=\"chat__form__container\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"error-message\">\r\n                <div className=\"message\">\r\n                  {error ? error || \"something went wrong\" : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"form__control\">\r\n                <div className=\"form__unit\">\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={promiseOptions}\r\n                    defaultOptions\r\n                    name=\"members\"\r\n                    isMulti\r\n                    onChange={onChange}\r\n                    styles={colourStyles}\r\n                  />\r\n                </div>\r\n                <div className=\"error-message\">\r\n                  <div className=\"message\">\r\n                    {membersError && \"yout must add at least one person\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form__control\">\r\n                <div className=\"form__unit\">\r\n                  <input\r\n                    placeholder=\" \"\r\n                    type=\"text\"\r\n                    value={chatName}\r\n                    className=\"form__input\"\r\n                    onChange={(e) => setChatName(e.target.value)}\r\n                  />\r\n                  <label className=\"form__label\">Chat Room Name</label>\r\n                </div>\r\n                <div className=\"error-message\">\r\n                  <div className=\"message\">\r\n                    {chatNameError && \"yout must name the chat\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"chat__form--tail\">\r\n                <button\r\n                  disabled={\r\n                    isLoading ||\r\n                    !members ||\r\n                    !members.length ||\r\n                    !chatName ||\r\n                    !chatName.trim()\r\n                  }\r\n                  className=\"btn btn--contained1-default mg-none\"\r\n                >\r\n                  {isLoading ? \"Loading...\" : \"Create\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {success && <h6>Your new room was created succfully</h6>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </CSSTransition>\r\n    </>\r\n  );\r\n};\r\nexport default ChatForm;\r\n"]},"metadata":{},"sourceType":"module"}