{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\chat\\\\chat-friends.jsx\";\nimport React, { useState, useEffect, useReducer, useCallback } from \"react\";\nimport { Search, Add, Friends } from \"../../assets/icons/icons\";\nimport Loading from \"../../shared/loading.js\";\nimport RenderFriends from \"./render-friends\";\nimport { useFetch } from \"../../shared/hooks/useFetch\";\nimport { useSelector } from \"react-redux\";\nimport ChatForm from \"./chat-form\";\nimport socket from \"../socket\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_ROOMS\":\n      return action.payload;\n\n    case \"ADD_ROOM\":\n      return [action.payload, ...state];\n\n    case \"FILTER_ROOMS\":\n      return action.payload.list.filter(room => room.data.name.includes(action.payload.keyword));\n\n    default:\n      return state;\n  }\n};\n\nconst ChatFriends = ({\n  goBack\n}) => {\n  const currentUser = useSelector(state => state.currentUser);\n  const [rooms, dispatch] = useReducer(reducer, []);\n  const [searchValue, setSearchValue] = useState();\n  const [chatForm, setChatForm] = useState(false);\n  const [chatRooms, setChatRooms] = useState([]);\n  const [seatchedRooms, setSearchedRooms] = useState();\n  const {\n    request,\n    error,\n    loading,\n    clearError\n  } = useFetch();\n  const [isGroup, setIsGroup] = useState(false);\n  const matches = useMediaQuery(\"(max-width:600px)\");\n\n  const closeForm = () => {\n    setChatForm(false);\n  };\n\n  let timer;\n\n  const getUserRooms = async () => {\n    try {\n      const responsedData = await request(process.env.REACT_APP_BACKEND_URL + `/users/rooms/${currentUser._id}`);\n      dispatch({\n        type: \"FETCH_ROOMS\",\n        payload: responsedData.data.rooms\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUserRooms();\n  }, []);\n  let x;\n\n  const filterRooms = keyword => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      x = keyword;\n      setSearchedRooms(rooms.filter(room => room.data.name.includes(keyword)));\n    }, 300);\n  };\n\n  const hideGroup = useCallback(() => {\n    setIsGroup(false);\n  }, []);\n  useEffect(() => {\n    socket.on(\"action\", action => {\n      switch (action.type) {\n        case \"CREATE_CAHT_ROOM\":\n          {\n            dispatch({\n              type: \"ADD_ROOM\",\n              payload: action.chatRoom\n            });\n            break;\n          }\n\n        case \"RENDER_ROOMS\":\n          {\n            getUserRooms();\n            break;\n          }\n      }\n    });\n  }, []);\n  const h = matches && isGroup;\n  return React.createElement(React.Fragment, null, \" \", React.createElement(\"span\", {\n    className: \"show-group\",\n    onClick: e => {\n      e.stopPropagation();\n      setIsGroup(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Friends, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    onClick: hideGroup,\n    className: `${h ? \"chat__friends__wrapper\" : matches ? \" \" : \"chat__friends__sfs\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `chat__friends ${!h ? \"hero\" : matches ? \"slide-in-left\" : \"\"}`,\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__header--icon\",\n    onClick: goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"chat__header--img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: currentUser.img,\n    alt: \"aa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"chat__friends--search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__friends--unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"search-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Search, {\n    width: \"2rem\",\n    height: \"2rem\",\n    fill: \"#222\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for your rooms\",\n    className: \"chat__input\",\n    onChange: e => filterRooms(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"chat__friends__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Add new room\"), React.createElement(ChatForm, {\n    dispatchRoom: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: () => setChatForm(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Add, {\n    width: \"3rem\",\n    height: \"3rem\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"chat__friends--friends-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"chat__friends--list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, loading && !rooms.length ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }) : React.createElement(RenderFriends, {\n    rooms: seatchedRooms || rooms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))))));\n};\n\nexport default ChatFriends;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/chat/chat-friends.jsx"],"names":["React","useState","useEffect","useReducer","useCallback","Search","Add","Friends","Loading","RenderFriends","useFetch","useSelector","ChatForm","socket","useMediaQuery","reducer","state","action","type","payload","list","filter","room","data","name","includes","keyword","ChatFriends","goBack","currentUser","rooms","dispatch","searchValue","setSearchValue","chatForm","setChatForm","chatRooms","setChatRooms","seatchedRooms","setSearchedRooms","request","error","loading","clearError","isGroup","setIsGroup","matches","closeForm","timer","getUserRooms","responsedData","process","env","REACT_APP_BACKEND_URL","_id","err","console","log","x","filterRooms","clearTimeout","setTimeout","hideGroup","on","chatRoom","h","e","stopPropagation","img","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useCallback } from \"react\";\r\nimport { Search, Add, Friends } from \"../../assets/icons/icons\";\r\nimport Loading from \"../../shared/loading.js\";\r\nimport RenderFriends from \"./render-friends\";\r\nimport { useFetch } from \"../../shared/hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ChatForm from \"./chat-form\";\r\nimport socket from \"../socket\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ROOMS\":\r\n      return action.payload;\r\n    case \"ADD_ROOM\":\r\n      return [action.payload, ...state];\r\n    case \"FILTER_ROOMS\":\r\n      return action.payload.list.filter((room) =>\r\n        room.data.name.includes(action.payload.keyword)\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ChatFriends = ({ goBack }) => {\r\n  const currentUser = useSelector((state) => state.currentUser);\r\n  const [rooms, dispatch] = useReducer(reducer, []);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [chatForm, setChatForm] = useState(false);\r\n  const [chatRooms, setChatRooms] = useState([]);\r\n  const [seatchedRooms, setSearchedRooms] = useState();\r\n  const { request, error, loading, clearError } = useFetch();\r\n  const [isGroup, setIsGroup] = useState(false);\r\n  const matches = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const closeForm = () => {\r\n    setChatForm(false);\r\n  };\r\n  let timer;\r\n  const getUserRooms = async () => {\r\n    try {\r\n      const responsedData = await request(\r\n        process.env.REACT_APP_BACKEND_URL + `/users/rooms/${currentUser._id}`\r\n      );\r\n      dispatch({ type: \"FETCH_ROOMS\", payload: responsedData.data.rooms });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUserRooms();\r\n  }, []);\r\n  let x;\r\n  const filterRooms = (keyword) => {\r\n    if (timer) clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      x = keyword;\r\n      setSearchedRooms(\r\n        rooms.filter((room) => room.data.name.includes(keyword))\r\n      );\r\n    }, 300);\r\n  };\r\n\r\n  const hideGroup = useCallback(() => {\r\n    setIsGroup(false);\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"action\", (action) => {\r\n      switch (action.type) {\r\n        case \"CREATE_CAHT_ROOM\": {\r\n          dispatch({ type: \"ADD_ROOM\", payload: action.chatRoom });\r\n          break;\r\n        }\r\n        case \"RENDER_ROOMS\": {\r\n          getUserRooms();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n  const h = matches && isGroup;\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <span\r\n        className=\"show-group\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setIsGroup(true);\r\n        }}\r\n      >\r\n        <Friends />\r\n      </span>\r\n      <div\r\n      onClick={hideGroup}\r\n        className={`${\r\n          h ? \"chat__friends__wrapper\" : matches ? \" \" : \"chat__friends__sfs\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`chat__friends ${\r\n            !h ? \"hero\" : matches ? \"slide-in-left\" : \"\"\r\n          }`}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n        \r\n          \r\n          \r\n          <div className=\"chat__header\">\r\n            <div className=\"chat__header--icon\" onClick={goBack}>\r\n              <svg viewBox=\"0 0 24 24\">\r\n                <g>\r\n                  <path d=\"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\"></path>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div className=\"chat__header--img\">\r\n              <img src={currentUser.img} alt=\"aa\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat__friends--search\">\r\n            <div className=\"chat__friends--unit\">\r\n              <span className=\"search-icon\">\r\n                <Search width=\"2rem\" height=\"2rem\" fill=\"#222\" />\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search for your rooms\"\r\n                className=\"chat__input\"\r\n                onChange={(e) => filterRooms(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat__friends__add\">\r\n            <h2>Add new room</h2>\r\n              <ChatForm dispatchRoom={dispatch}><div className=\"icon\" onClick={() => setChatForm(true)}>\r\n              <Add width=\"3rem\" height=\"3rem\" fill=\"#fff\" />\r\n            </div></ChatForm>\r\n          </div>\r\n          <div className=\"chat__friends--friends-list\">\r\n            <ul className=\"chat__friends--list\">\r\n              {loading && !rooms.length ? (\r\n                <Loading />\r\n              ) : (\r\n                <RenderFriends rooms={seatchedRooms || rooms} />\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ChatFriends;\r\n"]},"metadata":{},"sourceType":"module"}