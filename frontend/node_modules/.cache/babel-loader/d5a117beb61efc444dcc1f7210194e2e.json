{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\posts\\\\post-form\\\\emojy-picker.js\";\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { Smile } from \"../../../assets/icons/icons.js\";\n\nconst EmojyPicker = ({\n  handleChange,\n  style,\n  className\n}) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const closePicker = useCallback(() => {\n    setShowPicker(false);\n  }, []);\n\n  const addEmoji = e => {\n    let sym = e.unified.split(\"-\");\n    let codesArray = [];\n    sym.forEach(el => codesArray.push(\"0x\" + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    handleChange(emoji);\n  };\n\n  return React.createElement(React.Fragment, null, showPicker && React.createElement(\"div\", {\n    className: \"icon__wrapperr\",\n    onClick: closePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"icon icon__emojy\",\n    onClick: e => {\n      e.stopPropagation();\n      setShowPicker(e => !e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Smile, {\n    width: \"2.2rem\",\n    height: \"2.4rem\",\n    fill: \"#8B8B85\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"emjoy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, showPicker && React.createElement(\"span\", {\n    className: `picker ${className ? className : ''}`,\n    style: style,\n    onClick: e => {\n      e.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Picker, {\n    sheetSize: 20,\n    darkMode: true,\n    emojiTooltip: true,\n    title: \"Spher\",\n    set: \"messenger\",\n    onSelect: addEmoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))));\n};\n\nexport default EmojyPicker;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/posts/post-form/emojy-picker.js"],"names":["React","useState","useRef","useCallback","useEffect","Picker","Smile","EmojyPicker","handleChange","style","className","showPicker","setShowPicker","closePicker","addEmoji","e","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,gCAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AACzD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMY,WAAW,GAAGV,WAAW,CAAC,MAAM;AACpCS,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAF8B,EAE5B,EAF4B,CAA/B;;AAGA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIC,GAAG,GAAGD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgB,GAAhB,CAAV;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAaC,EAAD,IAAQF,UAAU,CAACG,IAAX,CAAgB,OAAOD,EAAvB,CAApB;AACA,QAAIE,KAAK,GAAGC,MAAM,CAACC,aAAP,CAAqB,GAAGN,UAAxB,CAAZ;AACAX,IAAAA,YAAY,CAACe,KAAD,CAAZ;AACD,GAND;;AAQA,SACE,0CACFZ,UAAU,IAAI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEE,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAGE,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACW,eAAF;AACAd,MAAAA,aAAa,CAAEG,CAAD,IAAO,CAACA,CAAT,CAAb;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,MAAM,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,IACT;AACE,IAAA,SAAS,EAAG,UAASD,SAAS,GAAEA,SAAF,GAAY,EAAG,EAD/C;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,OAAO,EAAGM,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACW,eAAF;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,EADb;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,YAAY,EAAE,IAHhB;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,GAAG,EAAC,WALN;AAME,IAAA,QAAQ,EAAEZ,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFJ,CATF,CAFF,CADF;AAoCD,CAjDD;;AAkDA,eAAeP,WAAf","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport { Smile } from \"../../../assets/icons/icons.js\";\r\n\r\nconst EmojyPicker = ({ handleChange, style ,className}) => {\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const closePicker = useCallback(() => {\r\n    setShowPicker(false);\r\n  }, []);\r\n  const addEmoji = (e) => {\r\n    let sym = e.unified.split(\"-\");\r\n    let codesArray = [];\r\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\r\n    let emoji = String.fromCodePoint(...codesArray);\r\n    handleChange(emoji);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n{ showPicker && <div className=\"icon__wrapperr\" onClick={closePicker}></div>}\r\n      <span\r\n        className=\"icon icon__emojy\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setShowPicker((e) => !e);\r\n        }}\r\n      >\r\n\r\n        <Smile width=\"2.2rem\" height=\"2.4rem\" fill=\"#8B8B85\" />\r\n        <div className=\"emjoy\">\r\n          {showPicker && (\r\n            <span\r\n              className={`picker ${className ?className:''}`}\r\n              style={style}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n\r\n              <Picker\r\n                sheetSize={20}\r\n                darkMode={true}\r\n                emojiTooltip={true}\r\n                title=\"Spher\"\r\n                set=\"messenger\"\r\n                onSelect={addEmoji}\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default EmojyPicker;\r\n"]},"metadata":{},"sourceType":"module"}