{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\posts\\\\post-form\\\\get-location.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Map } from \"../../../assets/icons/icons.js\";\nimport ErrorModal from \"../../../shared/models/error-model\";\nimport LoadingModal from \"../../../shared/models/loading-modal\";\nconst GetLocation = React.memo(({\n  handleLocation,\n  location\n}) => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  const geolocationSuccess = pos => {\n    setLoading(true);\n    const {\n      latitude,\n      longitude\n    } = pos.coords;\n    const url = `https://api.weatherbit.io/v2.0/current?lat=${latitude}&lon=${longitude}&key=` + process.env.REACT_APP_WEATHER_API_KEY;\n    axios.get(url).then(function (response) {\n      handleLocation(response.data.data[0].city_name);\n    }).catch(function (error) {\n      setError(error.message);\n    });\n    setLoading(false);\n  };\n\n  const getErrorCode = err => {\n    switch (err.code) {\n      case err.PERMISSION_DENIED:\n        return \"You have to make location allow first!\";\n\n      case err.POSITION_UNAVAILABLE:\n        return \"POSITION_UNAVAILABLE\";\n\n      case err.TIMEOUT:\n        return \"TIMEOUT\";\n\n      default:\n        return \"UNKNOWN_ERROR\";\n    }\n  };\n\n  const geolocationFaliur = err => {\n    setError(getErrorCode(err));\n    setLoading(false);\n  };\n\n  const currentLocation = () => {\n    if (navigator.geolocation) {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(geolocationSuccess, geolocationFaliur);\n    } else {\n      console.log(\"your browser dosnot support geolocation\");\n    }\n  };\n\n  const cancleLocation = () => {\n    handleLocation(null);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", clearError);\n    return () => window.removeEventListener(\"click\", clearError);\n  }, [clearError]);\n  return React.createElement(React.Fragment, null, loading && React.createElement(LoadingModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), error && React.createElement(ErrorModal, {\n    state: \"error\",\n    closeModal: clearError,\n    message: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"icon\",\n    onClick: location ? cancleLocation : currentLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Map, {\n    width: \"2.2rem\",\n    height: \"2.4rem\",\n    fill: location ? \"#1D8CF8\" : \"#8B8B85\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n});\nexport default GetLocation;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/posts/post-form/get-location.js"],"names":["React","useState","useEffect","useCallback","axios","Map","ErrorModal","LoadingModal","GetLocation","memo","handleLocation","location","error","setError","loading","setLoading","clearError","geolocationSuccess","pos","latitude","longitude","coords","url","process","env","REACT_APP_WEATHER_API_KEY","get","then","response","data","city_name","catch","message","getErrorCode","err","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","geolocationFaliur","currentLocation","navigator","geolocation","getCurrentPosition","console","log","cancleLocation","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Map } from \"../../../assets/icons/icons.js\";\r\nimport ErrorModal from \"../../../shared/models/error-model\";\r\nimport LoadingModal from \"../../../shared/models/loading-modal\";\r\n\r\nconst GetLocation = React.memo(({ handleLocation, location }) => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  const geolocationSuccess = (pos) => {\r\n    setLoading(true);\r\n    const { latitude, longitude } = pos.coords;\r\n    const url =\r\n      `https://api.weatherbit.io/v2.0/current?lat=${latitude}&lon=${longitude}&key=` +\r\n      process.env.REACT_APP_WEATHER_API_KEY;\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n        handleLocation(response.data.data[0].city_name);\r\n      })\r\n      .catch(function (error) {\r\n        setError(error.message);\r\n      });\r\n    setLoading(false);\r\n  };\r\n  const getErrorCode = (err) => {\r\n    switch (err.code) {\r\n      case err.PERMISSION_DENIED:\r\n        return \"You have to make location allow first!\";\r\n      case err.POSITION_UNAVAILABLE:\r\n        return \"POSITION_UNAVAILABLE\";\r\n      case err.TIMEOUT:\r\n        return \"TIMEOUT\";\r\n      default:\r\n        return \"UNKNOWN_ERROR\";\r\n    }\r\n  };\r\n  const geolocationFaliur = (err) => {\r\n    setError(getErrorCode(err));\r\n    setLoading(false);\r\n  };\r\n  const currentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      setLoading(true);\r\n      navigator.geolocation.getCurrentPosition(\r\n        geolocationSuccess,\r\n        geolocationFaliur\r\n      );\r\n    } else {\r\n      console.log(\"your browser dosnot support geolocation\");\r\n    }\r\n  };\r\n\r\n  const cancleLocation = () => {\r\n    handleLocation(null);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", clearError);\r\n    return () => window.removeEventListener(\"click\", clearError);\r\n  }, [clearError]);\r\n  return (\r\n    <>\r\n      {loading && <LoadingModal />}\r\n      {error && (\r\n        <ErrorModal state=\"error\" closeModal={clearError} message={error} />\r\n      )}\r\n      <span\r\n        className=\"icon\"\r\n        onClick={location ? cancleLocation : currentLocation}\r\n      >\r\n        <Map\r\n          width=\"2.2rem\"\r\n          height=\"2.4rem\"\r\n          fill={location ? \"#1D8CF8\" : \"#8B8B85\"}\r\n        />\r\n      </span>\r\n    </>\r\n  );\r\n});\r\nexport default GetLocation;\r\n"]},"metadata":{},"sourceType":"module"}