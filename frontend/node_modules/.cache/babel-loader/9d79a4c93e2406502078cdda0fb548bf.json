{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\users\\\\profile\\\\profile-feed.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport PostItem from \"../../posts/post-item\";\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostPlaceholer from \"../../placeholders/post-placeholder\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nconst ProfileFeed = React.memo(({\n  length,\n  isProfile,\n  user,\n  img,\n  username,\n  id\n}) => {\n  const userPost = useSelector(state => state.userPost);\n  const [posts, setPosts] = useState([]);\n  const {\n    request,\n    loading,\n    error\n  } = useFetch();\n  const dispatch = useDispatch();\n  const [hasMore, setHasMore] = useState(true);\n\n  const handlePosts = async () => {\n    try {\n      const responseData = await request(process.env.REACT_APP_BACKEND_URL + `/users/${id}?skip=${isProfile ? userPost.length : posts.length}`);\n\n      if (responseData.data.posts.length < 5) {\n        setHasMore(false);\n      }\n\n      if (isProfile) {\n        dispatch({\n          type: \"MORE_POSTS\",\n          payload: responseData.data.posts\n        });\n      } else {\n        setPosts(e => [...e, ...responseData.data.posts]);\n      }\n    } catch (err) {\n      console.log(err, error);\n    }\n  };\n\n  useEffect(() => {\n    handlePosts();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, (isProfile ? userPost : posts).map(post => React.createElement(PostItem, {\n    path: \"stay\",\n    post: post,\n    key: post._id,\n    username: username,\n    img: img,\n    uid: user._id,\n    token: user.token,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(PostPlaceholer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), !loading && (isProfile && length > userPost.length || !isProfile && length > posts.length) && React.createElement(\"div\", {\n    className: \"has-more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"nude\",\n    onClick: handlePosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Load More Posts\")));\n});\nexport default ProfileFeed;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/users/profile/profile-feed.jsx"],"names":["React","useState","useEffect","PostItem","useFetch","useDispatch","useSelector","PostPlaceholer","InfiniteScroll","ProfileFeed","memo","length","isProfile","user","img","username","id","userPost","state","posts","setPosts","request","loading","error","dispatch","hasMore","setHasMore","handlePosts","responseData","process","env","REACT_APP_BACKEND_URL","data","type","payload","e","err","console","log","map","post","_id","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,MAAMC,WAAW,GAAGT,KAAK,CAACU,IAAN,CAClB,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,GAA3B;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA;AAA1C,CAAD,KAAoD;AAClD,QAAMC,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEoB,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BnB,QAAQ,EAA5C;AACA,QAAMoB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAM0B,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMP,OAAO,CAChCQ,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GACG,UAASf,EAAG,SAAQJ,SAAS,GAAGK,QAAQ,CAACN,MAAZ,GAAqBQ,KAAK,CAACR,MAAO,EAFlC,CAAlC;;AAIA,UAAIiB,YAAY,CAACI,IAAb,CAAkBb,KAAlB,CAAwBR,MAAxB,GAAiC,CAArC,EAAwC;AACtCe,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACD,UAAId,SAAJ,EAAe;AACbY,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,OAAO,EAAEN,YAAY,CAACI,IAAb,CAAkBb;AAAjD,SAAD,CAAR;AACD,OAFD,MAEO;AACLC,QAAAA,QAAQ,CAAEe,CAAD,IAAO,CAAC,GAAGA,CAAJ,EAAO,GAAGP,YAAY,CAACI,IAAb,CAAkBb,KAA5B,CAAR,CAAR;AACD;AACF,KAbD,CAaE,OAAOiB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBb,KAAjB;AACD;AACF,GAjBD;;AAkBArB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACf,SAAS,GAAGK,QAAH,GAAcE,KAAxB,EAA+BoB,GAA/B,CAAoCC,IAAD,IAClC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACC,GAHZ;AAIE,IAAA,QAAQ,EAAE1B,QAJZ;AAKE,IAAA,GAAG,EAAED,GALP;AAME,IAAA,GAAG,EAAED,IAAI,CAAC4B,GANZ;AAOE,IAAA,KAAK,EAAE5B,IAAI,CAAC6B,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAaGpB,OAAO,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,EAkBG,CAACA,OAAD,KACGV,SAAS,IAAID,MAAM,GAAGM,QAAQ,CAACN,MAAhC,IACE,CAACC,SAAD,IAAcD,MAAM,GAAGQ,KAAK,CAACR,MAFjC,KAGG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEgB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CArBN,CADF;AA8BD,CA1DiB,CAApB;AA4DA,eAAelB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostItem from \"../../posts/post-item\";\r\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PostPlaceholer from \"../../placeholders/post-placeholder\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst ProfileFeed = React.memo(\r\n  ({ length, isProfile, user, img, username, id }) => {\r\n    const userPost = useSelector((state) => state.userPost);\r\n    const [posts, setPosts] = useState([]);\r\n    const { request, loading, error } = useFetch();\r\n    const dispatch = useDispatch();\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const handlePosts = async () => {\r\n      try {\r\n        const responseData = await request(\r\n          process.env.REACT_APP_BACKEND_URL +\r\n            `/users/${id}?skip=${isProfile ? userPost.length : posts.length}`\r\n        );\r\n        if (responseData.data.posts.length < 5) {\r\n          setHasMore(false);\r\n        }\r\n        if (isProfile) {\r\n          dispatch({ type: \"MORE_POSTS\", payload: responseData.data.posts });\r\n        } else {\r\n          setPosts((e) => [...e, ...responseData.data.posts]);\r\n        }\r\n      } catch (err) {\r\n        console.log(err, error);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      handlePosts();\r\n    }, []);\r\n    return (\r\n      <div className=\"mt-5\">\r\n        {(isProfile ? userPost : posts).map((post) => (\r\n          <PostItem\r\n            path=\"stay\"\r\n            post={post}\r\n            key={post._id}\r\n            username={username}\r\n            img={img}\r\n            uid={user._id}\r\n            token={user.token}\r\n          />\r\n        ))}\r\n\r\n        {loading && (\r\n          <div>\r\n            <PostPlaceholer />\r\n          </div>\r\n        )}\r\n        {!loading &&\r\n          ((isProfile && length > userPost.length) ||\r\n            (!isProfile && length > posts.length)) && (\r\n            <div className=\"has-more\">\r\n              <button className=\"nude\" onClick={handlePosts}>\r\n                Load More Posts\r\n              </button>\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nexport default ProfileFeed;\r\n"]},"metadata":{},"sourceType":"module"}