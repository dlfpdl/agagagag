{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\users\\\\notifications\\\\notifications.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bell_2 as Bell } from \"../../../assets/icons/icons.js\";\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport socket from \"../../socket\";\nimport Loading from \"../../../shared/loading\";\nimport RenderNotifications from \"./render-notifications\";\nconst Notifications = React.memo(({\n  uid,\n  token\n}) => {\n  const notifications = useSelector(state => state.notifications);\n  const dispatch = useDispatch();\n  const [unReadNotifications, setUnReadNotifications] = useState(0);\n  const {\n    request,\n    loading,\n    error\n  } = useFetch();\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchNotifications = async () => {\n    try {\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/users/notifications/${uid}?skip=${notifications.length}`);\n      if (response.data.notifications.length < 6) setHasMore(false);\n      dispatch({\n        type: \"FETCH_NOTIFICATIONS\",\n        payload: response.data.notifications\n      });\n      setUnReadNotifications(response.data.unReadNotifications);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clearNotfy = async () => {\n    if (unReadNotifications > 0) {\n      try {\n        await request(process.env.REACT_APP_BACKEND_URL + `/users/clear/${uid}`, \"post\", {}, {\n          Authorization: \"Bearer \" + token\n        });\n        setUnReadNotifications(0);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"action\", action => {\n      if (action.type === \"ClIENT_SEND_NOTFY\") {\n        if (action.state === \"REMOVE\") {\n          dispatch({\n            type: \"REMOVE_NOTIFY\",\n            payload: action.notify._id\n          });\n        } else {\n          setUnReadNotifications(e => e + 1);\n          dispatch({\n            type: \"ADD_NOTIFY\",\n            payload: action.notify\n          });\n        }\n      }\n    });\n    fetchNotifications();\n  }, []);\n\n  const handleClick = () => {};\n\n  return React.createElement(\"div\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notifications__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notifications__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"text h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"span\", {\n    className: \"icon\",\n    style: {\n      position: \"relative\"\n    },\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, unReadNotifications > 0 && React.createElement(\"span\", {\n    className: \"icon__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, unReadNotifications), React.createElement(Bell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"notifications__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, notifications && notifications.length ? React.createElement(\"ul\", {\n    className: \"notifications__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(RenderNotifications, {\n    clearNotfy: clearNotfy,\n    notifications: notifications,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), hasMore && React.createElement(\"div\", {\n    className: \"has-more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" \", React.createElement(\"button\", {\n    className: \"nude\",\n    disabled: loading,\n    onClick: fetchNotifications,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, loading ? \"Loading\" : \"Load more Notifications\"), \" \")) : loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }) : null)));\n});\nexport default Notifications;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/users/notifications/notifications.jsx"],"names":["React","useEffect","useState","Bell_2","Bell","useFetch","useDispatch","useSelector","socket","Loading","RenderNotifications","Notifications","memo","uid","token","notifications","state","dispatch","unReadNotifications","setUnReadNotifications","request","loading","error","hasMore","setHasMore","fetchNotifications","response","process","env","REACT_APP_BACKEND_URL","length","data","type","payload","err","console","log","clearNotfy","Authorization","on","action","notify","_id","e","handleClick","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAM,IAAIC,IAAnB,QAA+B,gCAA/B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,MAAMC,aAAa,GAAGX,KAAK,CAACY,IAAN,CAAW,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AACnD,QAAMC,aAAa,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDjB,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM;AAAEkB,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BjB,QAAQ,EAA5C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMuB,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,OAAO,CAC5BO,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GACG,wBAAuBhB,GAAI,SAAQE,aAAa,CAACe,MAAO,EAF/B,CAA9B;AAIA,UAAIJ,QAAQ,CAACK,IAAT,CAAchB,aAAd,CAA4Be,MAA5B,GAAqC,CAAzC,EAA4CN,UAAU,CAAC,KAAD,CAAV;AAC5CP,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAEP,QAAQ,CAACK,IAAT,CAAchB;AAFhB,OAAD,CAAR;AAIAI,MAAAA,sBAAsB,CAACO,QAAQ,CAACK,IAAT,CAAcb,mBAAf,CAAtB;AACD,KAXD,CAWE,OAAOgB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAfD;;AAgBA,QAAMG,UAAU,GAAG,YAAY;AAC7B,QAAInB,mBAAmB,GAAG,CAA1B,EAA6B;AAC3B,UAAI;AACF,cAAME,OAAO,CACXO,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAqC,gBAAehB,GAAI,EAD7C,EAEX,MAFW,EAGX,EAHW,EAIX;AACEyB,UAAAA,aAAa,EAAE,YAAYxB;AAD7B,SAJW,CAAb;AAQAK,QAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD,OAVD,CAUE,OAAOe,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AACF,GAhBD;;AAiBAjC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAAC+B,EAAP,CAAU,QAAV,EAAqBC,MAAD,IAAY;AAC9B,UAAIA,MAAM,CAACR,IAAP,KAAgB,mBAApB,EAAyC;AACvC,YAAIQ,MAAM,CAACxB,KAAP,KAAiB,QAArB,EAA+B;AAC7BC,UAAAA,QAAQ,CAAC;AACPe,YAAAA,IAAI,EAAE,eADC;AAEPC,YAAAA,OAAO,EAAEO,MAAM,CAACC,MAAP,CAAcC;AAFhB,WAAD,CAAR;AAID,SALD,MAKO;AACLvB,UAAAA,sBAAsB,CAAEwB,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAtB;AACA1B,UAAAA,QAAQ,CAAC;AACPe,YAAAA,IAAI,EAAE,YADC;AAEPC,YAAAA,OAAO,EAAEO,MAAM,CAACC;AAFT,WAAD,CAAR;AAID;AACF;AACF,KAfD;AAgBAhB,IAAAA,kBAAkB;AACnB,GAlBQ,EAkBN,EAlBM,CAAT;;AAmBA,QAAMmB,WAAW,GAAG,MAAM,CAAE,CAA5B;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAFT;AAGE,IAAA,OAAO,EAAED,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG1B,mBAAmB,GAAG,CAAtB,IACC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,mBAA7B,CANJ,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,aAAa,IAAIA,aAAa,CAACe,MAA/B,GACC;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AACE,IAAA,UAAU,EAAEO,UADd;AAEE,IAAA,aAAa,EAAEtB,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGQ,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEF,OAFZ;AAGE,IAAA,OAAO,EAAEI,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,OAAO,GAAG,SAAH,GAAe,yBALzB,CAFF,EAQY,GARZ,CANJ,CADD,GAmBGA,OAAO,GACT,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAEP,IAtBN,CAdF,CADF,CADF;AA2CD,CAtGqB,CAAtB;AAuGA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bell_2 as Bell } from \"../../../assets/icons/icons.js\";\r\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport socket from \"../../socket\";\r\nimport Loading from \"../../../shared/loading\";\r\nimport RenderNotifications from \"./render-notifications\";\r\n\r\nconst Notifications = React.memo(({ uid, token }) => {\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const dispatch = useDispatch();\r\n  const [unReadNotifications, setUnReadNotifications] = useState(0);\r\n  const { request, loading, error } = useFetch();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/users/notifications/${uid}?skip=${notifications.length}`\r\n      );\r\n      if (response.data.notifications.length < 6) setHasMore(false);\r\n      dispatch({\r\n        type: \"FETCH_NOTIFICATIONS\",\r\n        payload: response.data.notifications,\r\n      });\r\n      setUnReadNotifications(response.data.unReadNotifications);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const clearNotfy = async () => {\r\n    if (unReadNotifications > 0) {\r\n      try {\r\n        await request(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/clear/${uid}`,\r\n          \"post\",\r\n          {},\r\n          {\r\n            Authorization: \"Bearer \" + token,\r\n          }\r\n        );\r\n        setUnReadNotifications(0);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    socket.on(\"action\", (action) => {\r\n      if (action.type === \"ClIENT_SEND_NOTFY\") {\r\n        if (action.state === \"REMOVE\") {\r\n          dispatch({\r\n            type: \"REMOVE_NOTIFY\",\r\n            payload: action.notify._id,\r\n          });\r\n        } else {\r\n          setUnReadNotifications((e) => e + 1);\r\n          dispatch({\r\n            type: \"ADD_NOTIFY\",\r\n            payload: action.notify,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    fetchNotifications();\r\n  }, []);\r\n  const handleClick = () => {};\r\n  return (\r\n    <div className=\"notifications\">\r\n      <div className=\"notifications__container\">\r\n        <div className=\"notifications__header\">\r\n          <span className=\"text h2\">Notifications</span>\r\n          <span\r\n            className=\"icon\"\r\n            style={{ position: \"relative\" }}\r\n            onClick={handleClick}\r\n          >\r\n            {unReadNotifications > 0 && (\r\n              <span className=\"icon__sub\">{unReadNotifications}</span>\r\n            )}\r\n            <Bell />\r\n          </span>\r\n        </div>\r\n        <div className=\"notifications__body\">\r\n          {notifications && notifications.length ? (\r\n            <ul className=\"notifications__list\">\r\n              <RenderNotifications\r\n                clearNotfy={clearNotfy}\r\n                notifications={notifications}\r\n              />\r\n              {hasMore && (\r\n                <div className=\"has-more\">\r\n                  {\" \"}\r\n                  <button\r\n                    className=\"nude\"\r\n                    disabled={loading}\r\n                    onClick={fetchNotifications}\r\n                  >\r\n                    {loading ? \"Loading\" : \"Load more Notifications\"}\r\n                  </button>{\" \"}\r\n                </div>\r\n              )}\r\n            </ul>\r\n          ) : loading ? (\r\n            <Loading />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}