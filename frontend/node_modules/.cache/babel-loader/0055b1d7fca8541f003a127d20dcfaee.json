{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\chat\\\\chat-info.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"../../shared/hooks/useFetch\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatInfo = ({\n  roomId,\n  CloseInfo\n}) => {\n  const {\n    request,\n    loading,\n    error,\n    clearError\n  } = useFetch();\n  const [roomInfo, setRoomInfo] = useState();\n\n  const fetchRoom = async () => {\n    try {\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/chat/get/${roomId}`);\n      setRoomInfo(response.data.chatRoomData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchRoom();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"chat__room fade-in-top\",\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, roomInfo && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"chat__room__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat__room__info__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: roomInfo.chatIcon,\n    alt: \"aa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, roomInfo.name)), React.createElement(\"div\", {\n    className: \"seprator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Members (\", roomInfo.members.length, \")\"), React.createElement(\"ul\", {\n    className: \"chat__room__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, roomInfo.members.map(member => React.createElement(Link, {\n    to: `/user/${member._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"chat__room__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `chat__room__item--img`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, member.isOnline && React.createElement(\"div\", {\n    className: \"userActive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: member.img,\n    alt: \"aa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, member.username)))))));\n};\n\nexport default ChatInfo;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/chat/chat-info.jsx"],"names":["React","useState","useEffect","useFetch","Link","ChatInfo","roomId","CloseInfo","request","loading","error","clearError","roomInfo","setRoomInfo","fetchRoom","response","process","env","REACT_APP_BACKEND_URL","data","chatRoomData","err","console","log","e","stopPropagation","chatIcon","name","members","length","map","member","_id","isOnline","img","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAC1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAA0CR,QAAQ,EAAxD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;;AACA,QAAMa,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,OAAO,CAC5BQ,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAqC,aAAYZ,MAAO,EAD5B,CAA9B;AAGAO,MAAAA,WAAW,CAACE,QAAQ,CAACI,IAAT,CAAcC,YAAf,CAAX;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GATD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAGU,CAAD,IAAOA,CAAC,CAACC,eAAF,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGb,QAAQ,IACP,0CACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,QAAQ,CAACc,QAAnB;AAA6B,IAAA,GAAG,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,QAAQ,CAACe,IAAd,CAJF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6Bf,QAAQ,CAACgB,OAAT,CAAiBC,MAA9C,MARF,EASE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,QAAQ,CAACgB,OAAT,CAAiBE,GAAjB,CAAsBC,MAAD,IACpB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQA,MAAM,CAACC,GAAI,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACE,QAAP,IAAmB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEE;AAAK,IAAA,GAAG,EAAEF,MAAM,CAACG,GAAjB;AAAsB,IAAA,GAAG,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAM,CAACI,QAAZ,CALF,CADF,CADD,CADH,CATF,CALJ,CADF;AAgCD,CAhDD;;AAiDA,eAAe9B,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useFetch } from \"../../shared/hooks/useFetch\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ChatInfo = ({ roomId, CloseInfo }) => {\r\n  const { request, loading, error, clearError } = useFetch();\r\n  const [roomInfo, setRoomInfo] = useState();\r\n  const fetchRoom = async () => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL + `/chat/get/${roomId}`\r\n      );\r\n      setRoomInfo(response.data.chatRoomData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchRoom();\r\n  }, []);\r\n  return (\r\n    <div\r\n      className=\"chat__room fade-in-top\"\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      {roomInfo && (\r\n        <>\r\n          <div className=\"chat__room__info\">\r\n            <div className=\"chat__room__info__img\">\r\n              <img src={roomInfo.chatIcon} alt=\"aa\" />\r\n            </div>\r\n            <h5>{roomInfo.name}</h5>\r\n          </div>\r\n          <div className=\"seprator\" />\r\n          <h2 className=\"h2\">Members ({roomInfo.members.length})</h2>\r\n          <ul className=\"chat__room__list\">\r\n            {roomInfo.members.map((member) => (\r\n              <Link to={`/user/${member._id}`}>\r\n                <li className=\"chat__room__item\">\r\n                  <div className={`chat__room__item--img`}>\r\n                    {member.isOnline && <div className=\"userActive\"></div>}\r\n                    <img src={member.img} alt=\"aa\" />\r\n                  </div>\r\n                  <h4>{member.username}</h4>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ChatInfo;\r\n"]},"metadata":{},"sourceType":"module"}