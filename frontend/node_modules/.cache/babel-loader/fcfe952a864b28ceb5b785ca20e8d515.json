{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\posts\\\\post-form\\\\render-comments.js\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Loading from \"../../../shared/loading.js\";\nimport { Link } from 'react-router-dom';\n\nconst RenderComments = ({\n  comments,\n  handlePostComments\n}) => {\n  const getLeftTime = oldTime => {\n    const now = new Date();\n    const leftTime = new Date(oldTime).getTime();\n    const leftHours = (now.getTime() - leftTime) / (1000 * 3600);\n\n    if (leftHours < 1) {\n      let t = Math.ceil(leftHours * 60);\n      return t + (t === 1 ? \" MINUTE\" : \" MINUTES\") + \" AGO\";\n    }\n\n    if (leftHours < 24) {\n      let t = Math.floor(leftHours);\n      return t + (t === 1 ? \" Hour\" : \" Hours\") + \" AGO\";\n    }\n\n    if (leftHours < 24 * 7) {\n      let t = Math.floor(leftHours / 24);\n      return t + (t === 1 ? \" Day\" : \" Day\") + \" AGO\";\n    }\n\n    if (leftHours < 24 * 30) {\n      let t = Math.floor(leftHours / (24 * 7));\n      return t + (t === 1 ? \" Week\" : \" Weeks\") + \" AGO\";\n    }\n\n    if (leftHours < 365 * 24) {\n      let t = Math.floor(leftHours / (24 * 30));\n      return t + (t === 1 ? \" Month\" : \" Months\") + \" AGO\";\n    } else {\n      let t = Math.floor(leftHours / (365 * 24));\n      return t + (t === 1 ? \" Year\" : \" Years\") + \" AGO\";\n    }\n  };\n\n  return React.createElement(React.Fragment, null, comments.comments.map(comment => React.createElement(\"li\", {\n    className: \"post__comments__item\",\n    key: comment._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/user/${comment.user._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment__user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment__user--img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: comment.user.img,\n    alt: \"aa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"comment__user--name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, comment.user.username))), React.createElement(\"div\", {\n    className: \"comment__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, comment.content)), React.createElement(\"div\", {\n    className: \"comment__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, getLeftTime(comment.createdAt)))));\n};\n\nexport default RenderComments;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/posts/post-form/render-comments.js"],"names":["React","InfiniteScroll","Loading","Link","RenderComments","comments","handlePostComments","getLeftTime","oldTime","now","Date","leftTime","getTime","leftHours","t","Math","ceil","floor","map","comment","_id","user","img","username","content","createdAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsC;AAC3D,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/B,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,QAAQ,GAAG,IAAID,IAAJ,CAASF,OAAT,EAAkBI,OAAlB,EAAjB;AACA,UAAMC,SAAS,GAAG,CAACJ,GAAG,CAACG,OAAJ,KAAgBD,QAAjB,KAA8B,OAAO,IAArC,CAAlB;;AACA,QAAIE,SAAS,GAAG,CAAhB,EAAmB;AACjB,UAAIC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUH,SAAS,GAAG,EAAtB,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,SAAV,GAAsB,UAA1B,CAAD,GAAyC,MAAhD;AACD;;AACD,QAAID,SAAS,GAAG,EAAhB,EAAoB;AAClB,UAAIC,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWJ,SAAX,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,OAAV,GAAoB,QAAxB,CAAD,GAAqC,MAA5C;AACD;;AACD,QAAID,SAAS,GAAG,KAAK,CAArB,EAAwB;AACtB,UAAIC,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWJ,SAAS,GAAG,EAAvB,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,MAAV,GAAmB,MAAvB,CAAD,GAAkC,MAAzC;AACD;;AACD,QAAID,SAAS,GAAG,KAAK,EAArB,EAAyB;AACvB,UAAIC,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWJ,SAAS,IAAI,KAAK,CAAT,CAApB,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,OAAV,GAAoB,QAAxB,CAAD,GAAqC,MAA5C;AACD;;AACD,QAAID,SAAS,GAAG,MAAM,EAAtB,EAA0B;AACxB,UAAIC,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWJ,SAAS,IAAI,KAAK,EAAT,CAApB,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,QAAV,GAAqB,SAAzB,CAAD,GAAuC,MAA9C;AACD,KAHD,MAGO;AACL,UAAIA,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWJ,SAAS,IAAI,MAAM,EAAV,CAApB,CAAR;AACA,aAAOC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,OAAV,GAAoB,QAAxB,CAAD,GAAqC,MAA5C;AACD;AACF,GA3BD;;AA4BA,SACE,0CACGT,QAAQ,CAACA,QAAT,CAAkBa,GAAlB,CAAuBC,OAAD,IACrB;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAqC,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQD,OAAO,CAACE,IAAR,CAAaD,GAAI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,OAAO,CAACE,IAAR,CAAaC,GAAvB;AAA4B,IAAA,GAAG,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCH,OAAO,CAACE,IAAR,CAAaE,QAAnD,CAJF,CADA,CADF,EASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,OAAO,CAACK,OAAZ,CADF,CATF,EAYE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,WAAW,CAACY,OAAO,CAACM,SAAT,CAA3C,CAZF,CADD,CADH,CADF;AAoBD,CAjDD;;AAkDA,eAAerB,cAAf","sourcesContent":["import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loading from \"../../../shared/loading.js\";\r\nimport {Link} from 'react-router-dom'\r\nconst RenderComments = ({ comments, handlePostComments }) => {\r\n  const getLeftTime = (oldTime) => {\r\n    const now = new Date();\r\n    const leftTime = new Date(oldTime).getTime();\r\n    const leftHours = (now.getTime() - leftTime) / (1000 * 3600);\r\n    if (leftHours < 1) {\r\n      let t = Math.ceil(leftHours * 60);\r\n      return t + (t === 1 ? \" MINUTE\" : \" MINUTES\") + \" AGO\";\r\n    }\r\n    if (leftHours < 24) {\r\n      let t = Math.floor(leftHours);\r\n      return t + (t === 1 ? \" Hour\" : \" Hours\") + \" AGO\";\r\n    }\r\n    if (leftHours < 24 * 7) {\r\n      let t = Math.floor(leftHours / 24);\r\n      return t + (t === 1 ? \" Day\" : \" Day\") + \" AGO\";\r\n    }\r\n    if (leftHours < 24 * 30) {\r\n      let t = Math.floor(leftHours / (24 * 7));\r\n      return t + (t === 1 ? \" Week\" : \" Weeks\") + \" AGO\";\r\n    }\r\n    if (leftHours < 365 * 24) {\r\n      let t = Math.floor(leftHours / (24 * 30));\r\n      return t + (t === 1 ? \" Month\" : \" Months\") + \" AGO\";\r\n    } else {\r\n      let t = Math.floor(leftHours / (365 * 24));\r\n      return t + (t === 1 ? \" Year\" : \" Years\") + \" AGO\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {comments.comments.map((comment) => (\r\n        <li className=\"post__comments__item\" key={comment._id}>\r\n          <Link to={`/user/${comment.user._id}`}>\r\n          <div className=\"comment__user\">\r\n            <div className=\"comment__user--img\">\r\n              <img src={comment.user.img} alt=\"aa\" />\r\n            </div>\r\n            <div className=\"comment__user--name\">{comment.user.username}</div>\r\n          </div>\r\n          </Link>\r\n          <div className=\"comment__content\">\r\n            <p>{comment.content}</p>\r\n          </div>\r\n          <div className=\"comment__time\">{getLeftTime(comment.createdAt)}</div>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default RenderComments;\r\n"]},"metadata":{},"sourceType":"module"}