{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\posts\\\\post-form-comments.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { useFetch } from \"../../shared/hooks/useFetch\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"../../shared/models/loading-modal\";\nimport RenderComments from \"./post-form/render-comments\";\nimport socket from \"../socket\";\n\nconst reducer = (state, action, id) => {\n  switch (action.type) {\n    case \"NEW_COMMENTS\":\n      return {\n        comments: action.payload.comments,\n        length: action.payload.length ? action.payload.length : state.length,\n        loaded: true\n      };\n\n    case \"FETCH_COMMENTS\":\n      return {\n        comments: [...state.comments, ...action.payload.comments],\n        length: action.payload.length ? action.payload.length : state.length,\n        loaded: true\n      };\n\n    case \"NEW_COMMENT\":\n      return {\n        comments: [action.payload, ...state.comments],\n        length: state.length + 1\n      };\n  }\n};\n\nconst PostFormComments = ({\n  postId,\n  user,\n  id\n}) => {\n  const [content, setContent] = useState();\n  const {\n    error,\n    loading,\n    request\n  } = useFetch();\n  const [comments, dispatch] = useReducer(reducer, {\n    comments: [],\n    length: 0,\n    loaded: false\n  });\n\n  const addComment = async content => {\n    setContent(\"\");\n\n    try {\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/posts/comments/create`, \"post\", {\n        content,\n        userId: user._id,\n        postId,\n        img: user.img,\n        username: user.username\n      }, {\n        Authorization: \"Bearer \" + user.token\n      });\n      dispatch({\n        type: \"NEW_COMMENT\",\n        payload: { ...response.data.comment,\n          user: {\n            img: user.img,\n            _id: user._id,\n            username: user.username\n          }\n        }\n      });\n\n      if (response.data.notify) {\n        socket.emit(\"action\", {\n          state: \"ADD\",\n          notify: response.data.notify,\n          type: \"SEND_NOTFY\"\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!content.trim()) return;\n    addComment(content);\n  };\n\n  const handlePostComments = async load => {\n    try {\n      const response = await request(process.env.REACT_APP_BACKEND_URL + `/posts/comments/${id}?skip=${load ? 0 : comments.comments.length}`);\n      const length = response.data.length;\n\n      if (!load) {\n        dispatch({\n          type: \"FETCH_COMMENTS\",\n          payload: {\n            comments: response.data.post.comments,\n            length\n          }\n        });\n      } else {\n        dispatch({\n          type: \"NEW_COMMENTS\",\n          payload: {\n            comments: response.data.post.comments,\n            length\n          }\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    handlePostComments(\"load\");\n  }, [id]);\n  if (comments.comments.length === 0 && comments.loaded === false) return React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"post__comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"post__comments__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(RenderComments, {\n    comments: comments,\n    handlePostComments: handlePostComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), comments.comments.length < comments.length && comments.comments.length != 0 && React.createElement(\"button\", {\n    className: \"btn btn--contained1-primary\",\n    disabled: loading,\n    onClick: handlePostComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, loading ? \"Loading\" : \"Load more comments\")), React.createElement(\"div\", {\n    className: \"post__comments__form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \" \",\n    type: \"text\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    className: \"form__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Write a comment\")))));\n};\n\nexport default PostFormComments;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/posts/post-form-comments.js"],"names":["React","useState","useEffect","useReducer","useFetch","useSelector","Loading","RenderComments","socket","reducer","state","action","id","type","comments","payload","length","loaded","PostFormComments","postId","user","content","setContent","error","loading","request","dispatch","addComment","response","process","env","REACT_APP_BACKEND_URL","userId","_id","img","username","Authorization","token","data","comment","notify","emit","err","console","log","handleSubmit","e","preventDefault","trim","handlePostComments","load","post","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { useFetch } from \"../../shared/hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"../../shared/models/loading-modal\";\r\nimport RenderComments from \"./post-form/render-comments\";\r\nimport socket from \"../socket\";\r\n\r\nconst reducer = (state, action, id) => {\r\n  switch (action.type) {\r\n    case \"NEW_COMMENTS\":\r\n      return {\r\n        comments: action.payload.comments,\r\n        length: action.payload.length ? action.payload.length : state.length,\r\n        loaded: true,\r\n      };\r\n    case \"FETCH_COMMENTS\":\r\n      return {\r\n        comments: [...state.comments, ...action.payload.comments],\r\n        length: action.payload.length ? action.payload.length : state.length,\r\n        loaded: true,\r\n      };\r\n    case \"NEW_COMMENT\":\r\n      return {\r\n        comments: [action.payload, ...state.comments],\r\n        length: state.length + 1,\r\n      };\r\n  }\r\n};\r\n\r\nconst PostFormComments = ({ postId, user, id }) => {\r\n  const [content, setContent] = useState();\r\n  const { error, loading, request } = useFetch();\r\n  const [comments, dispatch] = useReducer(reducer, {\r\n    comments: [],\r\n    length: 0,\r\n    loaded: false,\r\n  });\r\n  const addComment = async (content) => {\r\n    setContent(\"\");\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL + `/posts/comments/create`,\r\n        \"post\",\r\n        {\r\n          content,\r\n          userId: user._id,\r\n          postId,\r\n          img: user.img,\r\n          username: user.username,\r\n        },\r\n        {\r\n          Authorization: \"Bearer \" + user.token,\r\n        }\r\n      );\r\n      dispatch({\r\n        type: \"NEW_COMMENT\",\r\n        payload: {\r\n          ...response.data.comment,\r\n          user: {\r\n          img: user.img,\r\n          _id: user._id,\r\n          username: user.username,\r\n          },\r\n        },\r\n      });\r\n      if(response.data.notify){\r\n      socket.emit(\"action\", {\r\n        state: \"ADD\",\r\n        notify: response.data.notify,\r\n        type: \"SEND_NOTFY\",\r\n      });\r\n    }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!content.trim()) return;\r\n    addComment(content);\r\n  };\r\n\r\n  const handlePostComments = async (load) => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/posts/comments/${id}?skip=${load ? 0 : comments.comments.length}`\r\n      );\r\n      const length = response.data.length;\r\n      if (!load) {\r\n        dispatch({\r\n          type: \"FETCH_COMMENTS\",\r\n          payload: { comments: response.data.post.comments, length },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"NEW_COMMENTS\",\r\n          payload: { comments: response.data.post.comments, length },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handlePostComments(\"load\");\r\n  }, [id]);\r\n  if (comments.comments.length === 0 && comments.loaded === false)\r\n    return <Loading />;\r\n  return (\r\n    <div className=\"post__comments\">\r\n      <ul className=\"post__comments__list\">\r\n        <RenderComments\r\n          comments={comments}\r\n          handlePostComments={handlePostComments}\r\n        />\r\n        {comments.comments.length < comments.length &&\r\n          comments.comments.length != 0 && (\r\n            <button\r\n              className=\"btn btn--contained1-primary\"\r\n              disabled={loading}\r\n              onClick={handlePostComments}\r\n            >\r\n              {loading ? \"Loading\" : \"Load more comments\"}\r\n            </button>\r\n          )}\r\n      </ul>\r\n      <div className=\"post__comments__form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              type=\"text\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              className=\"form__input\"\r\n            />\r\n            <label className=\"form__label\">Write a comment</label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PostFormComments;\r\n"]},"metadata":{},"sourceType":"module"}