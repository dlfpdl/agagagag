{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\dpma\\\\frontend\\\\src\\\\components\\\\posts\\\\post-form\\\\post-image.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { Crop, Close } from \"../../../assets/icons/icons\";\nconst PostImage = React.memo(({\n  previewUrl,\n  removeImage,\n  setImgData\n}) => {\n  const [crop, setCrop] = useState(null);\n  const CropperRef = useRef(0);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, crop && React.createElement(\"div\", {\n    className: \"modal__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__body cropper\",\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    ref: CropperRef,\n    src: previewUrl,\n    style: {\n      height: \"80vh\",\n      width: \"100%\"\n    } // Cropper.js options\n    ,\n    zoomable: false,\n    aspectRatio: 1,\n    viewMode: 2,\n    responsive: true,\n    guides: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"modal__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn--outlined-danger\",\n    onClick: () => setCrop(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn btn--contained-success\",\n    onClick: () => {\n      setCrop(null);\n      setImgData(CropperRef.current.cropper.getData());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Submit\"))))), previewUrl ? React.createElement(\"div\", {\n    className: \"form__images--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__images--row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: previewUrl,\n    alt: \"aa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form__images--options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon del\",\n    onClick: removeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Close, {\n    width: \"2.2rem\",\n    height: \"2.2rem\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"icon crop\",\n    onClick: () => {\n      setCrop(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Crop, {\n    width: \"2.2rem\",\n    height: \"2.2rem\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))) : null);\n});\nexport default PostImage;","map":{"version":3,"sources":["C:/Users/GIGABYTE/Desktop/dpma/frontend/src/components/posts/post-form/post-image.jsx"],"names":["React","useState","useRef","Cropper","Zoom","Crop","Close","PostImage","memo","previewUrl","removeImage","setImgData","crop","setCrop","CropperRef","e","stopPropagation","height","width","current","cropper","getData"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { Crop, Close } from \"../../../assets/icons/icons\";\r\n\r\nconst PostImage = React.memo(({ previewUrl, removeImage, setImgData }) => {\r\n  const [crop, setCrop] = useState(null);\r\n  const CropperRef = useRef(0);\r\n\r\n  return (\r\n    <div>\r\n      {crop && (\r\n        <div className=\"modal__container\">\r\n          <div className=\"modal\">\r\n            <div\r\n              className=\"modal__body cropper\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <Cropper\r\n                ref={CropperRef}\r\n                src={previewUrl}\r\n                style={{ height: \"80vh\", width: \"100%\" }}\r\n                // Cropper.js options\r\n                zoomable={false}\r\n                aspectRatio={1}\r\n                viewMode={2}\r\n                responsive={true}\r\n                guides={false}\r\n              />\r\n              <div className=\"modal__footer\">\r\n                <button\r\n                  className=\"btn btn--outlined-danger\"\r\n                  onClick={() => setCrop(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn--contained-success\"\r\n                  onClick={() => {\r\n                    setCrop(null);\r\n                    setImgData(CropperRef.current.cropper.getData());\r\n                  }}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {previewUrl ? (\r\n        <div className=\"form__images--container\">\r\n          <div className=\"form__images--row\">\r\n            <div>\r\n              <Zoom>\r\n                <div className=\"img\">\r\n                  <img src={previewUrl} alt=\"aa\" />\r\n                </div>\r\n              </Zoom>\r\n            </div>\r\n            <div className=\"form__images--options\">\r\n              <span className=\"icon del\" onClick={removeImage}>\r\n                <Close width=\"2.2rem\" height=\"2.2rem\" fill=\"#fff\" />\r\n              </span>\r\n              <span\r\n                className=\"icon crop\"\r\n                onClick={() => {\r\n                  setCrop(true);\r\n                }}\r\n              >\r\n                <Crop width=\"2.2rem\" height=\"2.2rem\" fill=\"#fff\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n});\r\nexport default PostImage;\r\n"]},"metadata":{},"sourceType":"module"}